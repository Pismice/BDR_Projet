@page "/joueur/update/{id}"
@inject JoueurService JoueurService
@inject EquipeService EquipeService
@inject PaysService PaysService
@inject NavigationManager NavigationManager
@inject IJSRuntime IJSRuntime
<h3>Update</h3>
<form>
	<div class="row">
		<div class="col-md-8">
			<div class="form-group">
				<label for="Nom" class="control-label">Nom</label>
				<input form="Nom" class="form-control" @bind="@joueur.Nom" />
			</div>
			<div class="form-group">
				<label for="Prenom" class="control-label">Prénom</label>
				<input form="Prenom" class="form-control" @bind="@joueur.Prenom" />
			</div>
			<div class="form-group">
				<label for="Pseudonyme" class="control-label">Pseudonyme</label>
				<input form="Pseudonyme" class="form-control" @bind="@joueur.Pseudonyme" />
			</div>
			<div class="form-group">
				<label for="DateNaissance" class="control-label">Date de naissance</label>
				<input form="DateNaissance" class="form-control" @bind="@joueur.DateNaissance" />
			</div>
			<div class="form-group">
				<label for="Salaire" class="control-label">Salaire</label>
				<input form="Salaire" class="form-control" @bind="@joueur.Salaire" />
			</div>
			<div class="form-group">
				<label for="idPays" class="control-label">Pays</label>
				<select form="idPays" class="form-control" id="pays" name="pays" @bind="@joueur.IdPays">
					@foreach (Pays p in pays)
					{
						<option value="@p.Id">@p.Nom</option>
					}
				</select>
			</div>
		</div>
	</div>
	<br />
	<div class="row">
		<div class="col-md-4">
			<div class="form-group">
				<input type="button" class="btn btn-primary" @onclick="@UpdateJoueur" value="Modifier" />
				<input type="button" class="btn btn-secondary" @onclick="@End" value="Annuler" />
			</div>
		</div>
	</div>
</form>
@code {
	[Parameter]
	public string id { get; set; }
	Joueur joueur;
	Equipe[]? equipes;
	Pays[]? pays;
	protected override void OnInitialized()
	{
		joueur = JoueurService.GetById(Int16.Parse(id));
		pays = PaysService.GetAll();
		equipes = EquipeService.GetAll();
	}

	protected void UpdateJoueur()
	{
		try
		{
			JoueurService.Update(joueur);
		}
		catch (Exception e)
		{
			IJSRuntime.InvokeVoidAsync("alert", e.Message);
		}
		End();
	}
	protected void End()
	{
		NavigationManager.NavigateTo("joueur");
	}
}
